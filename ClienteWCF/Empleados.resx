<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>